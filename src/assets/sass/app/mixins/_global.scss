//pushes the target to its own render layer on the gpu
//
@mixin layer {
  backface-visibility: hidden;
}

@mixin layer-reset {
  backface-visibility: initial;
}

// pushes the target to its own render layer on the gpu
//
@mixin gpu {
  backface-visibility: hidden;
  transform: translateZ(0);
  transform-style: preserve-3d;
}

@mixin gpu-reset {
  backface-visibility: initial;
  perspective: none;
  transform: none;
}

// breakpoint
// example @include bp(940px) { width:80%; }
//
@mixin bp($size, $mobile-first: false) {
  @if ($mobile-first == true) {
    @media only screen and (min-width: $size) {
      @content;
    }
  } @else {
    @media only screen and (max-width: $size) {
      @content;
    }
  }
}


@mixin mobile($ref) {

  @if ($ref) {
    @at-root {
      .mobile #{$ref} {
        @content;
      }
    }
  }

  @media only screen and (max-width: $bp-mobile) {
    @content;
  }

}


// Text ellipsis
// Requires inline-block or block for proper styling
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Clearfix
@mixin cf {
  *zoom: 1;
  &::before,
  &::after {
    content: '';
    display: table;
  }
  &::after {
    clear: both;
  }
}

// Horizontal/Vertical/Both Alignment - Parent container needs position relative. IE9+
@mixin align($direction: both) {
  position: absolute;
  transform-style: preserve-3d;
  @if ($direction == horizontal) or ($direction == h) {
    left: 50%;
    transform: translateX(-50%);
  } @else if ($direction == vertical) or ($direction == v) {
    top: 50%;
    transform: translateY(-50%);
  } @else {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin line-clamp($numLines: 1,$lineHeight: 1.412) {
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $numLines;
  max-height: $numLines * $lineHeight + unquote('em');
  display: -webkit-box;
  overflow: hidden;
  text-overflow: -o-ellipsis-lastline;
  text-overflow: ellipsis;
  display: block;
  /* autoprefixer: off */
}
