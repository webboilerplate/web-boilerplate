// // DO NOT EDIT DIRECTLY!
  // Generated by gulp/tasks/iconfont.js
  // from ./gulp/tasks/iconfont/template.scss

@font-face {
  font-family: icons;
  src: url("../../assets/fonts/icons.eot");
  src: url("../../assets/fonts/icons.eot?#iefix") format('embedded-opentype'), url("../../assets/fonts/icons.woff") format('woff'), url("../../assets/fonts/icons.ttf") format('truetype'), url("../../assets/fonts/icons.svg#icons") format('svg');
  font-weight: normal;
  font-style: normal;
}

@mixin icon($content: '') {
  &:before {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    content: $content;
    font-family: 'icons';
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    line-height: 1;
    speak: none;
    text-transform: none;
    @content;
  }
}

.icon {
  @include icon;
}

// Save variable
$icon-facebook: "\e001";
// Save mixin
@mixin icon--facebook {
  @include icon($icon-facebook) {
    @content
  }
}

// Expose as class
// TODO check dot
.icon.-facebook:before {
  content: $icon-facebook
}

// Save variable
$icon-linkedin: "\e002";
// Save mixin
@mixin icon--linkedin {
  @include icon($icon-linkedin) {
    @content
  }
}

// Expose as class
// TODO check dot
.icon.-linkedin:before {
  content: $icon-linkedin
}

// Save variable
$icon-pinterest: "\e003";
// Save mixin
@mixin icon--pinterest {
  @include icon($icon-pinterest) {
    @content
  }
}

// Expose as class
// TODO check dot
.icon.-pinterest:before {
  content: $icon-pinterest
}

// Save variable
$icon-twitter: "\e004";
// Save mixin
@mixin icon--twitter {
  @include icon($icon-twitter) {
    @content
  }
}

// Expose as class
// TODO check dot
.icon.-twitter:before {
  content: $icon-twitter
}


